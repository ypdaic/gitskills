@CachEvict 的作用 主要针对方法配置，能够根据一定的条件对缓存进行清空


value 缓存的名称，在 spring 配置文件中定义，必须指定至少一个	例如：

    @CachEvict(value=”mycache”) 或者 
    @CachEvict(value={”cache1”,”cache2”}

key	缓存的 key，可以为空，如果指定要按照 SpEL 表达式编写，如果不指定，则缺省按照方法的所有参数进行组合	例如：

    @CachEvict(value=”testcache”,key=”#userName”)

condition 缓存的条件（参数进行判断），可以为空，使用 SpEL 编写，返回 true 或者 false，只有为 true 才进行缓存	例如：

    @CachEvict(value=”testcache”,condition=”#userName.length()>2”)

allEntries	是否清空所有缓存内容，缺省为 false，如果指定为 true，则方法调用后将立即清空所有缓存	例如：

    @CachEvict(value=”testcache”,allEntries=true)

beforeInvocation	是否在方法执行前就清空，缺省为 false，如果指定为 true，则在方法还没有执行的时候就清空缓存，缺省情况下，如果方法执行抛出异常，则不会清空缓存	例如：

    @CachEvict(value=”testcache”，beforeInvocation=true)