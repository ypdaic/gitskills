@CachePut 的作用 主要针对方法配置，如果缓存需要更新，且不干扰方法的执行,可以使用注解@CachePut。
@CachePut标注的方法在执行前不会去检查缓存中是否存在之前执行过的结果，而是每次都会执行该方法，并将执行结果以键值对的形式存入指定的缓存中。

value 缓存的名称，在 spring 配置文件中定义，必须指定至少一个	例如：

    @CachePut(value=”mycache”) 或者 
    @CachePut(value={”cache1”,”cache2”}

key	缓存的 key，可以为空，如果指定要按照 SpEL 表达式编写，如果不指定，则缺省按照方法的所有参数进行组合	例如：

    @CachePut(value=”testcache”,key=”#userName”)

condition 缓存的条件（参数进行判断），可以为空，使用 SpEL 编写，返回 true 或者 false，只有为 true 才进行缓存	例如：

    @CachePut(value=”testcache”,condition=”#userName.length()>2”)

unless  缓存的条件（返回值进行判断），可以为空，使用 SpEL 编写，返回 true 或者 false，只有为 true 才进行缓存	例如：

    @CachePut(value = "usercache", keyGenerator = "smpkeyGenerator",condition="#name!=null", unless = "#result==null")

keyGenerator 缓存的 key的生成器，可以为空，如果指定需要自己实现KeyGenerator 接口