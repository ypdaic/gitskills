##列出所有主题，--zookeeper参数一定要和server.properties文件中的相同

kafka-topics.bat --zookeeper localhost:2181 --list

##列出所有主题的详细信息，--zookeeper参数一定要和server.properties文件中的相同

kafka-topics.bat --zookeeper localhost:2181 --describe

##创建主题 主题名 my-topic，1 副本，8 分区，--zookeeper参数一定要和server.properties文件中的相同

kafka-topics.bat --zookeeper localhost:2181 --create --topic my-topic --replication-factor 1 --partitions 8

kafka-topics.sh --zookeeper localhost:2181 --create --topic my-topic --replication-factor 1 --partitions 1

#zookeeper 集群创建topic

kafka-topics.sh --zookeeper 192.168.109.129:2181,192.168.109.130:2181 --create --topic access_log --replication-factor 1 --partitions 1

##增加分区，注意：分区无法被删除，只能增加分区不能减少分区，，--zookeeper参数一定要和server.properties文件中的相同

kafka-topics.bat --zookeeper localhost:2181 --alter --topic my-topic --partitions 16

##删除主题 （文件并没有删除，但是会被标记为删除），--zookeeper参数一定要和server.properties文件中的相同

kafka-topics.bat --zookeeper localhost:2181 --delete --topic my-topic

##创建生产者（控制台）
kafka-console-producer.bat --broker-list localhost:9092 --topic my-topic

##创建消费者（控制台）
kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic my-topic --from-beginning

kafka-console-consumer.sh --bootstrap-server 192.168.109.129:9092,192.168.109.120:9092 --topic access_log --from-beginning

##列出消费者群组（仅 Linux）
kafka-topics.sh --new-consumer --bootstrap-server localhost:9092 --list

##列出消费者群组详细信息（仅 Linux）
kafka-topics.sh --new-consumer --bootstrap-server localhost:9092 --describe --group 群组名
