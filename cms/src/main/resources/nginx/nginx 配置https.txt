1:使用openssl 生成公钥，私钥
    步骤，执行如下命令:
       openssl genrsa -des3 -out server.key 4096  (生成私钥，命令执行后会让你输入密码)
       openssl req -new -key server.key -out server.csr (生成CRS)
       cp server.key server.key.org                     (去除私钥密码)
       openssl rsa -in server.key.org -out server.key
       openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt  (生成证书)

       命令执行完毕后，会在当前目录生成server.csr,server.crt,server.key 这三个文件

       将server.key server.csr 拷贝到nginx目录

2:nginx 配置开启https
    server {
            listen       8089;
            server_name  test;
            #charset koi8-r;
            # 开启ssl
            ssl on;
            # 供浏览器下载的证书
            ssl_certificate /usr/local/nginx/server.crt;
            # 自己用来解密的私钥
            ssl_certificate_key /usr/local/nginx/server.key;
            #access_log  logs/host.access.log  main;
            # 会话超时时间
            ssl_session_timeout 5m;
            # 加密协议
            ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
            # 密码套件
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
            # 开启服务器选择密码使用服务器偏好，而不是使用客户端的偏好
            ssl_prefer_server_ciphers on;
           # location / {
           #     root   html;
           #     index  index.html index.htm;
           # }
           location / {
                set $cors_origin "";
                if ($http_origin ~* "^http://localhost:8087$") {
                    set $cors_origin $http_origin;
                }
                if ($http_origin ~* "^http://localhost:8088$") {
                    set $cors_origin $http_origin;
                }
                add_header Access-Control-Allow-Origin $cors_origin;
                add_header Access-Control-Allow-Headers 'content-type,Authorization';
                add_header Access-Control-Allow-Methods 'GET,POST,OPTIONS,PUT,DELETE,HEAD';
    #           add_header Access-Control-Allow-Credentials true;
                if ($request_method = 'OPTIONS') {
                    return 204;
                }

                proxy_pass http://localhost:8086/springcloud-provider/;
            }
    }

