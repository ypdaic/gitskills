MongoDB使用 createIndex () 方法来创建索引, createIndex()方法基本语法格式如下所示:
      db.collection.createIndex(keys, options)
语法中 Key 值为要创建的索引字段,1为指定按升序创建索引,如果你想按降序来创建索引指定为-1,也可以指定为hashed（哈希索引）。
语法中options为索引的属性,属性说明见下表；

background	boolean	是否后台构建索引,在生产环境中,如果数据量太大,构建索引可能会消耗很长时间,为了不影响业务,可以加上此参数,后台运行同时还会为其他读写操作让路
unique	boolean	是否为唯一索引
name	string	索引名字
sparse	boolean	是否为稀疏索引,索引仅引用具有指定字段的文档。

索引创建：
    单键唯一索引:db.users.createIndex({username :1},{unique:true});
    单键唯一稀疏索引:db.users. createIndex({username :1},{unique:true,sparse:true});
    复合唯一稀疏索引:db.users. createIndex({username:1,age:-1},{unique:true,sparse:true});
    创建哈希索引并后台运行:db.users. createIndex({username :'hashed'},{background:true});

索引删除：
    根据索引名字删除某一个指定索引:db.users.dropIndex("username_1");
    删除某集合上所有索引:db.users.dropIndexes();
    重建某集合上所有索引:db.users.reIndex();
    查询集合上所有索引:db.users.getIndexes();

哈希索引

    不同于传统的B-树索引,哈希索引使用hash函数来创建索引。
    例如:db.users. createIndex({username : 'hashed'});
    在索引字段上进行精确匹配,但不支持范围查询,不支持多键hash；
    Hash索引上的入口是均匀分布的,在分片集合中非常有用；


