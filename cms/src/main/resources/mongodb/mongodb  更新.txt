替换更新

    #将名称为lison的对象更新的只有一个属性country
    db.users.update({"username":"lison"},{"country":"USA"})

    结果：{ "_id" : ObjectId("5de91bff24c9c5a875a0e6d4"), "country" : "USA" }

操作符更新 （推荐使用）
 性能更好
 原子性操作

    #仅仅是更新country这一个属性
    db.users.update({"username":"james"},{"$set":{"country":"USA"}})


update() 方法用于更新已存在的文档。

语法格式如下：

    db.collection.update( <query>, <update>, { upsert: <boolean>, multi: <boolean>, writeConcern: <document> } )
    参数说明：
         query : update 的查询条件，类似 sql update 查询内 where 后面的；
         update : update 的对象和一些更新的操作符（如$,$inc...）等，也可以理解为 sql update 查询内 set 后面的
         upsert : 可选，这个参数的意思是，如果不存在 update 的记录，是否插入,true 为插入， 默认是 false，不插入。
         multi : 可选，mongodb 默认是 false,只更新找到的第一条记录，如果这个参数为 true, 就把按条件查出来多条记录全部更新。  writeConcern :可选，写策略配置。

upsert使用：

    数据不存在，记录将被插入
     与插入操作相比，upsert 插入的结果返回了_id 字段

    db.users.update({"username":"cang"},{"$set":{"age":18}},{"upsert":true})