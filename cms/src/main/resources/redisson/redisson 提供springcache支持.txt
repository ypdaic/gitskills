可以通过如下配置使用redisson 提供的缓存能力，但是其本身不提供key,value的序列化能力，需要我们自己序列化后存放

     /**
     * Redisson 提供的springcache的支持, 提供两种缓存机制,过期和不过期,默认是不过期的,如果要过期的需要提供CacheConfig
     * 并为每个缓存空间提供一个CacheConfig,RedissonCache提供的同步机制是分布式锁,而redis通过的同步机制是本地锁
     * @param redissonConnectionFactory
     * @param redisson
     * @return
     */
    @Bean
    public RedissonSpringCacheManager redisCacheManager(RedissonConnectionFactory redissonConnectionFactory, RedissonClient redisson) {
        Map<String, CacheConfig> cacheConfigHashMap = new HashMap<>();
        cacheConfigHashMap.put("test", cacheConfig());
        RedissonSpringCacheManager redissonSpringCacheManager = new RedissonSpringCacheManager(redisson, cacheConfigHashMap);
//        redissonSpringCacheManager.setCacheNames();
        return redissonSpringCacheManager;

    }

    @Bean
    public CacheConfig cacheConfig() {
        CacheConfig cacheConfig = new CacheConfig();
        cacheConfig.setTTL(1000 * 60 * 60 * 12);
        cacheConfig.setMaxIdleTime(0);
        return cacheConfig;
    }


    RedissonCacheMeterBinderProvider  提供缓存命中，丢失的指标数据