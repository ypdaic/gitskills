在开启@EnableWebMvc注解后，springboot的WebMvcAutoConfiguration自动配置会失效，要想配置一个ContentNegotiatingViewResolver，需要我们重写WebMvcConfigurer
接口的configureViewResolvers方法，并调用registry.enableContentNegotiation();方法，这个方法会创建一个ContentNegotiatingViewResolver，并且ContentNegotiatingViewResolver
会装配已经往ViewResolverRegistry注册的其他ViewResolver,而WebMvcConfigurationSupport的mvcViewResolver方法，最后返回的是一个ViewResolverComposite
组合，且只有一个ContentNegotiatingViewResolver。

如果不使用@EnableWebMvc注解，springboot 会自动注入一个ContentNegotiatingViewResolver，无需我们重写WebMvcConfigurer接口的configureViewResolvers方法，
并调用registry.enableContentNegotiation();方法，springboot也会注入一个InternalResourceViewResolver，一个BeanNameViewResolver


总结：开启@EnableWebMvc注解，DispatcherServlet 只会获取一个ViewResolver和一个BeanNameViewResolver（由ErrorMvcAutoConfiguration加载） 就是ViewResolverComposite，ViewResolverComposite组合了其他的ViewResolver，
     如果调用registry.enableContentNegotiation();方法，则ViewResolverComposite只会包含一个ContentNegotiatingViewResolver，ContentNegotiatingViewResolver
     会包含其他的ViewResolver

     不开启@EnableWebMvc注解，DispatcherServlet 会获取一个ViewResolverComposite，一个ContentNegotiatingViewResolver，一个InternalResourceViewResolver
     一个BeanNameViewResolver