<?xml version="1.0"?>
<!DOCTYPE mycat:schema SYSTEM "schema.dtd">
<mycat:schema xmlns:mycat="http://io.mycat/">
	
	<!-- 
	name 表示逻辑库的名称，必须全大写
	checkSQLschema 表示是否去掉逻辑库前缀，一般不带逻辑库前缀，也就带库名前缀查询时，需要改为true,好去掉逻辑库前缀
	sqlMaxLimit 表示每次查询最多返回100条 -->
	<schema name="TESTDB" checkSQLschema="false" sqlMaxLimit="100" dataNode="dn1">
		<!-- auto sharding by id (long) -->
		<!--
		table 标签用于表示需要拆分的表 name表示表名，同一个schema中要唯一
		dataNade 表示分片表所在的节点库，
		rule 表示分片规则，规则在rule.xml中配置，必须与tableRule指定的名称相同
		primaryKey 表示逻辑表对应真实表的主键
		type 表示逻辑表的类型有全局表，普通表两种，全局使用global
		autoIncrement 表示使用自增长主键-->
		 <table name="travelrecord" dataNode="dn1,dn2,dn3" rule="auto-sharding-long" primaryKey="ID"/>

		<!-- global table is auto cloned to all defined data nodes ,so can join
			with any table whose sharding node is in the same data node -->
		 <table name="company" primaryKey="ID" type="global" dataNode="dn1,dn2,dn3" />
		 <table name="goods" primaryKey="ID" type="global" dataNode="dn1,dn2" />
		<!-- random sharding using mod sharind rule -->
		 <table name="hotnews" primaryKey="ID" autoIncrement="true" dataNode="dn1,dn2,dn3" rule="mod-long" />
		 <table name="dual" primaryKey="ID" dataNode="dnx,dnoracle2" type="global" needAddLimit="false"/>
		 <table name="worker" primaryKey="ID" dataNode="jdbc_dn1,jdbc_dn2,jdbc_dn3" rule="mod-long" />
		 <table name="employee" primaryKey="ID" dataNode="dn1,dn2" rule="sharding-by-intfile" />
		 <table name="customer" primaryKey="ID" dataNode="dn1,dn2" rule="sharding-by-intfile">
			 <!--childTable 用于ER表，主表和子表会分配在同一个节点中，用一个节点中就可以使用join操作了-->
			<childTable name="orders" primaryKey="ID" joinKey="customer_id" parentKey="id">
				<childTable name="order_items" joinKey="order_id" parentKey="id" />
			</childTable>
			<childTable name="customer_addr" primaryKey="ID" joinKey="customer_id" parentKey="id" />
		</table>
		 <table name="oc_call" primaryKey="ID" dataNode="dn1$0-743" rule="latest-month-calldate"/>
	</schema>
	<!-- <dataNode name="dn1$0-743" dataHost="localhost1" database="db$0-743"
		/> -->
		<!-- 
		dataNode 定义分片库，也就是数据节点
		dataHost 指定具体是数据库实例
		database 指定数据库实例中具体的数据库 -->
	<dataNode name="dn1" dataHost="node1" database="db1" />
	<dataNode name="dn2" dataHost="node1" database="db2" />
	<!-- <dataNode name="dn3" dataHost="localhost1" database="db3" /> -->
	<!--<dataNode name="dn4" dataHost="sequoiadb1" database="SAMPLE" />
	 <dataNode name="jdbc_dn1" dataHost="jdbchost" database="db1" />
	<dataNode	name="jdbc_dn2" dataHost="jdbchost" database="db2" />
	<dataNode name="jdbc_dn3" 	dataHost="jdbchost" database="db3" /> -->
	<!-- 
	dataHost 定义具体的数据库实例 
	maxCon 每个读写连接池的最大值 
	minCon 每个读写连接池的最小值
	balance 负载均衡配置  0表示不开启，所有的读写发生在writeHost 
	                      1 表示 全部的 readHost 与 stand by writeHost（备用写库） 参与 select 语句的负载均衡
	                      2 所有读操作都随机的在 writeHost、readhost 上分发。
	                      3 所有读请求随机的分发到 wiriterHost 对应的 readhost 执行，writerHost 不负担读压力，
                            注意 balance=3 只在 1.4 及其以后版本有，1.3 没有
    witeType 负载均衡类型 0 所有写操作发送到配置的第一个 writeHost，第一个挂了切到还生存的第二个 writeHost，
                           重新启动后已切换后的为准，切换记录在配置文件中:dnindex.properties
                         1 所有写操作都随机的发送到配置的 writeHost，1.5 以后废弃不推荐
    switchType -1 表示不自动切换。
               1 默认值，自动切换。
               2 基于 MySQL 主从同步的状态决定是否切换。心跳语句为 show slave status
               3 基于 MySQL galary cluster 的切换机制（适合集群）（1.4.1）心跳语句为 show status like ‘wsrep%’
    dbType 指定后端连接的数据库类型
    dbDriver 指定连接后端数据库使用的 Driver，目前可选的值有 native 和 JDBC使用 native 的话，因为这个值执行的
             是二进制的 mysql 协议，所以可以使用 mysql 和 maridb。其他类型的数据库则需要使用 JDBC 驱动来支持
    tempReadHostAvailable 如果配置了这个属性 writeHost 下面的 readHost 仍旧可用，默认 0 可配置   可配置（0、1）。
    slaveThreshold 表示从库记录少于主库100条记录，将从库配置剔除掉-->
	<dataHost name="node1" maxCon="1000" minCon="10" balance="1"
			  writeType="0" dbType="mysql" dbDriver="jdbc" switchType="1"  slaveThreshold="100">
	    <!--heartbeat标签  指明用于和后端数据库进行心跳检查的语句。例如,MYSQL 可以使用 select user()，Oracle 可以
              使用 select 1 from dual 等-->
		<heartbeat>select user()</heartbeat>
		<!-- can have multi write hosts -->
		<!--writeHost写实例 host 用于标识不同实例，一般 writeHost 我们使用*M1，readHost 我们用*S1。
		                    url 后端实例连接地址，如果是使用 native 的 dbDriver，则一般为 address:port   这种形式。用 JDBC 或其他的
                            dbDriver，则需要特殊指定。当使用 JDBC 时则可以这么写：jdbc:mysql://localhost:3306/。  
                            user 后端存储实例需要的用户名字。
                            password 后端存储实例需要的密码。
                            weight 权重 配置在 readhost 中作为读节点的权重
                            usingDecrypt 是否对密码加密默认 0 否 如需要开启配置 1-->
		<writeHost host="hostM1" url="jdbc:mysql://192.168.184.128:3306?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF8&amp;serverTimezone=UTC" user="root" password="123456">
			<!-- can have multi read hosts -->
			<readHost host="hostS2" url="jdbc:mysql://192.168.184.128:3307?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF8&amp;serverTimezone=UTC" user="root" password="123456" />
		</writeHost>
		<!--备用写库-->
		 <writeHost host="hostS1" url="localhost:3316" user="root"
				   password="123456" />
		<!-- <writeHost host="hostM2" url="localhost:3316" user="root" password="123456"/> -->
	</dataHost>
	<!--
		<dataHost name="sequoiadb1" maxCon="1000" minCon="1" balance="0" dbType="sequoiadb" dbDriver="jdbc">
		<heartbeat> 		</heartbeat>
		 <writeHost host="hostM1" url="sequoiadb://1426587161.dbaas.sequoialab.net:11920/SAMPLE" user="jifeng" 	password="jifeng"></writeHost>
		 </dataHost>

	  <dataHost name="oracle1" maxCon="1000" minCon="1" balance="0" writeType="0" 	dbType="oracle" dbDriver="jdbc"> <heartbeat>select 1 from dual</heartbeat>
		<connectionInitSql>alter session set nls_date_format='yyyy-mm-dd hh24:mi:ss'</connectionInitSql>
		<writeHost host="hostM1" url="jdbc:oracle:thin:@127.0.0.1:1521:nange" user="base" 	password="123456" > </writeHost> </dataHost>

		<dataHost name="jdbchost" maxCon="1000" 	minCon="1" balance="0" writeType="0" dbType="mongodb" dbDriver="jdbc">
		<heartbeat>select 	user()</heartbeat>
		<writeHost host="hostM" url="mongodb://192.168.0.99/test" user="admin" password="123456" ></writeHost> </dataHost>

		<dataHost name="sparksql" maxCon="1000" minCon="1" balance="0" dbType="spark" dbDriver="jdbc">
		<heartbeat> </heartbeat>
		 <writeHost host="hostM1" url="jdbc:hive2://feng01:10000" user="jifeng" 	password="jifeng"></writeHost> </dataHost> -->

	<!-- <dataHost name="jdbchost" maxCon="1000" minCon="10" balance="0" dbType="mysql"
		dbDriver="jdbc"> <heartbeat>select user()</heartbeat> <writeHost host="hostM1"
		url="jdbc:mysql://localhost:3306" user="root" password="123456"> </writeHost>
		</dataHost> -->
</mycat:schema>