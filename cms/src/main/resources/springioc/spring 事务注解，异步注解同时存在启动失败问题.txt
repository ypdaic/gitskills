当一个类中存在自己依赖注入自己，并且同时存在异步注解和事务注解，会导致启动失败，报循环依赖错误

问题根源就是在这个类进行实例化时，还要先进行依赖注入，此时注入自己的代理对象是从三级缓存拿的提前暴露对象，然后再后续bean实例化过程中
会调用initializeBean方法，进而进行BeanPostProcessor接口的处理，然而AbstractAutoProxyCreator的处理逻辑是一个对象如果已经提前暴露过，就不会再次创建
代理对象，后续AbstractAdvisingBeanPostProcessor在进行处理时判断当前bean并不是代理对象，而且扫描到这个对象有aop相关注解，就会再次创建一个代理对象

这些步骤完成后，spring框架会对这里返回的bean对象和三级缓存的对象进行比较，如果不等就说明有问题，进而抛出了循环依赖异常