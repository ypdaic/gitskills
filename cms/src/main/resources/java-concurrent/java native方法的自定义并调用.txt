1:编写.java 文件

    package com.daiyanping.cms.concurrent;

    public class ZLThread {

        //装载库，保证JVM在启动的时候就会装载，故而一般是也给static
        static {
            System.loadLibrary( "EnjoyThreadNative" );
        }


        public native void start1();

        public static void main(String[] args) {
            ZLThread zlThread = new ZLThread();
            zlThread.start1();
        }
    }

2：生成.h 文件

    javac -h . ZLThread.java

3：编写.c 文件

    //头文件
    #include <pthread.h>
    #include <stdio.h>
    //导入自己的.h文件
    #include "com_daiyanping_cms_concurrent_ZLThread.h"
    //定义一个变量，接受创建线程后的线程id
    pthread_t pid;

    //定义线程的主体函数

    void * thread_entity(void* arg) {
    	while(1) {
    		usleep(100);
    		printf("i am new Thread! from c \n");
    	}

    }

    // 这个方法名有上面.h 文件拷贝而来，后面的参数类别固定
    JNIEXPORT void JNICALL Java_com_daiyanping_cms_concurrent_ZLThread_start1(JNIEnv *env, jobject c1) {
    	//调用操作系统的函数创建线程，注意四个参数
    	pthread_create(&pid,NULL,thread_entity,NULL);
    	while(1) {
    		usleep(100);
    		printf("I am main\n");
    	}
    }

4：将.c 文件编译成.so 文件

    gcc -fPIC -I /software/jdk1.8.0_191/include -I /software/jdk1.8.0_191/include/linux -shared -o libEnjoyThreadNative.so tnew.c

    -shared -o libEnjoyThreadNative.so  注意这个libxxx; lib是固定的xxx可以随意，但是得和你的java代码对应

5：

