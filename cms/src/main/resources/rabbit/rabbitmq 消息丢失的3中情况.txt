1: 消息在发往rabbitmq的过程中丢失

   解决方案：使用rabbitmq提供的事物功能，但是使用事物后会降低系统的吞吐量，因为太耗性能，一般我们用发送者确认机制
            如果消息发送到了exchange，就会返回ack，如果消息在rabbitmq内部异常了，就会返回nack，然后我们可以考虑
            将消息重新发一次，或者我们的消息在发送给mq之前提前在数据库，redis中保存一份，设置状态为发送中，接受到ack后
            设置状态为发送成功，然后使用定时任务重新发送状态为发送中的消息

2: 消息发送到rabbitmq后，mq自己挂掉了

   解决方案：开启exchange，queue，message 三者的持久化
            还是存在mq在持久化之前就挂掉了，但是这种几率很小


3: 消费端自己丢消息

    场景: 消费端在拿到消费后，还没进行业务处理就挂掉了，如果此时是自动ack的，那么这个消息就丢失了

    解决方案：使用手动ack，如果在业务在ack之前就挂了，broker会将消息发给其他的消费者进行消费，可能存在重复消费问题
             因为可能是在业务处理之后，ack之前挂了