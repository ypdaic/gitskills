

块，低--------------------------------------------慢，高

        无  失  发  备  高  事  事   消
        保  败  布  用  可  务  务   息
        障  通  者  交  用      高   的
            知  确  换  队      可   持
                认  器  列      用   久
                               队   化
                               列


        不做任何配置的情况下，生产者是不知道消息是否真正到达RabbitMQ，也就是
        说消息发布操作不返回任何消息个生产者，怎么保证我们消息发布的可靠性？

        1：失败通知

            消息发送时设置mandatory标志

        2：事务 （用的少）

            事务的实现主要是对信道（Channel）的设置，主要分为启动事务、提交事务、回滚事务。AMQP协议层面为我们提供了事务机制，但是事务机制本身也会带来问题：

            1、严重的性能问题    2、使生产者应用程序产生同步

        3：发送方确认

            该模式比事务更轻量，性能影响几乎可以忽略不计。
            当消息发送给交换器，交换器将消息发给相应的队列后，就会返回ack
            当消息发送给交换器，交换器无法路由，就会返回nack
            发送方确认有3种，1:一条条确认，2:批量确认，3：异步确认


        4：备用交换器

            当消息无法路由时，就会将消息发送到备用交换器
            当同时启用，失败通知，备用交换器，失败通知不会作用
