內建集群的设计目标

    1、允许消费者和生产者在节点崩溃的情况下继续运行；
    2、通过添加节点线性扩展消息通信的吞吐量。

可以保证消息的万无一失吗？

    不行，当一个节点崩溃时，该节点上队列的消息也会消失，rabbitmq默认不会将队列的消息复制到整个集群上。

集群中的队列和交换器

    队列

        集群中队列信息只在队列的所有者节点保存队列的所有信息，其他节点只知道队列的元数据和指向所有者节点的指针，节点崩溃时，该节点的队列和其上的绑定信息都消失了。
        为什么集群不复制队列内容和状态到所有节点：1）存储空间；2）性能，如果消息需要复制到集群中每个节点，网络开销不可避免，持久化消息还需要写磁盘。
        所以其他节点接收到不属于该节点的队列的消息时会将该消息传递给该队列的所有者节点上。

    交换器

        本质上是个这个交换器的名称和队列的绑定列表，可以看成一个类似于hashmap的映射表，
        所以交换器会在整个集群上复制

    元数据

        队列元数据：队列名称和属性（是否可持久化，是否自动删除）
        交换器元数据：交换器名称、类型和属性
        绑定元数据：交换器和队列的绑定列表
        vhost元数据：vhost内的相关属性，如安全属性等等

集群中的节点
    要么是内存节点，要么是磁盘节点。怎么区分？

    就是节点将队列、交换器、用户等等信息保存在哪里？单节点肯定是磁盘类型。
    集群中可以有内存节点，为了性能的考虑，全部是磁盘节点，当声明队列、交换器等等时，
    rabbitmq必须将数据保存在所有节点后才能表示操作完成。
    Rabbitmq只要求集群中至少有一个磁盘节点，从高可用的角度讲每个集群应该至少配备两个磁盘节点。
    因为只有一个磁盘节点的情况下，当这个磁盘节点崩溃时，集群可以保持运行，但任何修改操作，比如创建队列、交换器、添加和删除集群节点都无法进行。