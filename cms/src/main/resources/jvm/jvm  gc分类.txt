1、新生代回收(Minor GC/Young GC):指只是进行新生代的回收。

    1：当JVM无法为新对象分配空间时（例如Eden变满），总是会触发Minor GC。因此，分配率越高，Minor GC发生的频率就越高。
    2：在Minor GC事件中，有效生成将被忽略。从终身代到年轻代的参考被认为是GC的根源。在标记阶段，将忽略从年轻代到终身代的引用。
    3：与通常的看法相反，Minor GC确实触发了世界暂停，从而暂停了应用程序线程。对于大多数应用程序而言，
       如果可以将Eden中的大多数对象视为垃圾并且永远不会复制到Survivor / Old空间，则暂停的长度可以忽略不计。如果事实相反，则大多数新生物体都不适合收集，次要GC暂停会开始花费更多时间。

2、 老年代回收(Major GC/Old GC):指只是进行老年代的回收。目前只有 CMS 垃圾回收器会有这个单独的回收老年代的行为。
(Major GC 定义是比较混乱，有说指是老年代，有的说是做整个堆的收集，这个需要你根据别人的场景来定，没有固定的说法)


3、 整堆回收(Full GC):收集整个 Java 堆和方法区(注意包含方法区)