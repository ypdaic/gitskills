可触及的：从根节点开始，可以到达这个对象
可复活的：对象的所有引用都被释放，但是对象有可能在finalize()中复活
不可触及的：对象的finalize()被调用，并且没有复活，那么就会进入不可触及状态，
           不可触及的对象不可能被复活，因为finalize()只会被调用一次


判断一个对象A是否可回收，至少要经历两次标记过程

    1：如果对象A到GC Roots没有引用链，则进行第一次标记
    2：进行筛选，判断对象是否有必要执行finalize()方法


        如果对象A没有重写finalize() 方法，或者finalize() 方法已经被虚拟机调用过，这虚拟机视为
        “没必要执行”，A被判定为不可触及

        如果对象A重写了finalize()方法，且还未执行过，那么对象A会被插入到F-Queue队列中，由一个虚拟机自动创建的，低优先级的
        Finalizer线程触发其finalize()方法执行

        finalize() 方法是对象逃脱死亡的最后机会，稍后GC会对F-Queue队列中的对象进行第二次标记，如果A在finalize()方法中
        与引用链上的任何一个对象建立了联系，那么在第二次标记时，A会被溢出"即将回收"集合，之后，对象会再次出现没有引用存在的
        情况，在这个情况下，finalize方法不会被再调用，对象会直接变成不可触及的状态