在项目中对框架做过哪些扩展

hystrix的处理流程

你用了nacos,为什么选择了nacos

单体应用到微服务的过程



单体的优缺点：

	不够灵活： 对应用程序做任何细微的修改都需要将整个应用程序重新构建、重新部署
	妨碍持续交付：
	受技术栈限制：
	技术债务：

微服务的优缺点

	优点：逻辑清晰，简化部署，可扩展，灵活组合，技术异构，高可靠（故障隔离）
	缺点：复杂度高，运维复杂（需要监控系统），影响性能（链路调用长）


微服务如何去拆分



分布式锁有哪几种

使用zk两个异地机房，挂了一个，另外一个怎么保证可用

zk的协议的特点

频繁的full gc 怎么处理

用了这么多开源框架，你学到了什么

最后就是结果不重要



你为什么选择了rabbitmq

有没有了解其他的消息中间件

rabbitmq kakfa 有什么特点，区别

kafka底层的数据结构

为什么选择了nacos

除了nacos，你还知道那些注册中心，各自有什么特点

业务开发过程中遇到那些难点

说一下你的项目，项目的运作方式

项目的整体流程

说一下你的项目部署方式

团队规模