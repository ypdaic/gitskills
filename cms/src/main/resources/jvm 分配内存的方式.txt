1: 指针碰撞

    如果java堆中的内存并不是规整的，已使用的内存
    都放在一边，空闲的内存放在另一边，中间放着一个
    指针作为分界的指示，

2：空闲列表

    如果java堆中内存不是规整的，使用的内存和空闲的内存相互交错
    那就没有办法简单地进行指针碰撞了，虚拟机必须维护一个列表
    内存块是可用的，在分配的时候从列表中找到一块足够大的空间划分给对象
    实例，并更新列表上的记录


    CAS： 解决分配并发问题


    本地线程分配缓冲： 为每个线程分配一个独立的空间，每个线程在
                      自己的空间中分配