数据库，缓存，依赖的第三方，负载均衡，交换机带宽都是系统扩展时需要考虑的因素，

我们要知道系统并发到了某一个量级之后，哪一个因素会成为我们的瓶颈点，从而针对性地进行扩展

高可扩展性的设计思路

    拆分：

        拆分是提升系统扩展性最重要的一个思路，它会把庞杂的系统拆分成独立的有单一职责的模块，相对于大系统来说，考虑一个一个小模块的扩展性当然会简单一些。将复杂的问题简单化，这就是我们的思路。

    存储层的扩展性：

        存储拆分首先考虑的维度是业务维度，每个业务都有自己的库，这么做还能做到隔离，某个库挂了不会影响到其他数据库

        单个业务数据库突破单机限制，就要对数据库库做二次拆分，水平拆分，给数据增加节点，通过路由规则将数据写到具体哪个节点上（长远考虑，一次性增加足够的节点避免频繁扩容）

    业务层的扩展性：

        从三个维度考虑业务层的拆分方案：业务纬度，重要性纬度和请求来源纬度

            业务维度就是把相同业务的服务拆分成单独的业务池，每个业务依赖自己的数据库，不会依赖其他业务的数据库资源，当某个业务接口成为瓶颈，
            只需要扩展业务的池子，以及确认上下游的依赖方就可以了，这样就大大减少了扩容的复杂度