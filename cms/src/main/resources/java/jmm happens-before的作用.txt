





在Java 规范提案中为让大家理解内存可见性的这个概念，
提出了happens-before的概念来阐述操作之间的内存可见性。
对应Java程序员来说，理解happens-before是理解JMM的关键。
JMM这么做的原因是：程序员对于这两个操作是否真的被重排序并不关心，
程序员关心的是程序执行时的语义不能被改变（即执行结果不能被改变）。
因此，happens-before关系本质上和as-if-serial语义是一回事。as-if-serial语义保证单线程内程序的执行结果不被改变，
happens-before关系保证正确同步的多线程程序的执行结果不被改变

用happens-before作执行的结果需要对另一个操作可见，
那么这两个操作之间必须要存在happens-before关系 。

1）站在Java程序员的角度来说：JMM保证，如果一个操作happens-before另一个操作，那么第一个操作的执行结果将对第二个操作可见，而且第一个操作的执行顺序排在第二个操作之前。
2）站在编译器和处理器的角度来说：JMM允许，两个操作之间存在happens-before关系，不要求Java平台的具体实现必须要按照happens-before关系指定的顺序来执行。如果重排序之后的执行结果，与按happens-before关系来执行的结果一致，那么这种重排序是允许的。
