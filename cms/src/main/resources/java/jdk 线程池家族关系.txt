总接口：Executor
子接口：ScheduledExecutorService -> ExecutorService -> Executor
抽象实现：AbstractExecutorService -> ExecutorService （实现了invokeAll，invokeAny，submit 这些公共方法）
子类实现：ThreadPoolExecutor -> AbstractExecutorService | ForkJoinPool -> AbstractExecutorService
         ScheduledThreadPoolExecutor -> ScheduledExecutorService (延时任务，定时任务)

工具类：Executors 用于提供各种固定的线程池

       // 缓存线程池，核心程序池大小为0，最大任务数为Integer.MAX_VALUE，任务闲置时间60s，任务队列为无空间的SynchronousQueue
       // 对队列的读，写都需要等对队列的写和读
       // 这个线程的工作原理就是
       public static ExecutorService newCachedThreadPool() {
               return new ThreadPoolExecutor(0, Integer.MAX_VALUE,
                                             60L, TimeUnit.SECONDS,
                                             new SynchronousQueue<Runnable>());
           }

work获取任务的流程就是如果当前Work小于核心线程数，使用队列的take方法取任务，否则使用队列的poll方法，并指定超时时间，该
     * 超时时间就是我们的keepAliveTime参数，所以这个参数就是给超过核心线程数的work使用的，当该work 获取任务超时，则会退出执行
     * 退出后，如果当前work数大于核心线程数则不做任何处理，否则重新创建一个work

