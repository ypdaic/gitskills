1: 等表元数据锁
        例：session A 通过lock table命令持有表t的MDL写锁，而session B的查询需要获取MDL读锁。所以，session B进入等待状态。
        show processlist结果：
            4	event_scheduler	localhost		        Daemon	        11378	    Waiting on empty queue
            8	root	        192.168.140.1:52518		        Sleep	9060
            9	root	        192.168.140.1:52520	    test	Sleep	466
            10	root	        192.168.140.1:57273	    test	Sleep	579
            12	root	        192.168.140.1:58353	    test	Query	560	        Waiting for table metadata lock	    SELECT * from t where id=1
2：等flush
        例：在session A中，我故意每行都调用一次sleep(1)，这样这个语句默认要执行10万秒，在这期间表t一直是被session A“打开”着。然后，session B的flush tables t命令再要去关闭表t，就需要等session A的查询结束。这样，session C要再次查询的话，就会被flush 命令堵住了。

            session A：SELECT SLEEP(1) from t;
            session B：flush TABLES t;
            session C：SELECT * from t where id=1;

        show processlist结果：

            12	root	192.168.140.1:58353	test	             Query	22	User sleep	                SELECT SLEEP(1) from t
            14	root	192.168.140.1:58395	test	             Query	18	Waiting for table flush	    flush TABLES t
            16	root	192.168.140.1:58822	sys	                 Sleep	677
            18	root	192.168.140.1:58840	performance_schema	 Sleep	667
            19	root	192.168.140.1:58864	information_schema	 Sleep	642
            20	root	192.168.140.1:59381	test	             Query	13	 Waiting for table flush	SELECT * from t where id=1
3：等行锁
        例：session A启动了事务，占有写锁，不提交，session B占读锁

            session A：
                BEGIN;
                update t set c = c +1 where id = 1;
            session B：
                SELECT * from t where id=1 lock in SHARE mode;

        show processlist结果：

            10	root	192.168.140.1:57273	test	Query	0	starting	show processlist
            14	root	192.168.140.1:58395	test	Query	7	statistics	SELECT * from t where id=1 lock in SHARE mode
        8.0 行锁等待具体查询
            select BLOCKING_THREAD_ID from `performance_schema`.data_lock_waits
        5.7 select * from sys.innodb_lock_waits