与AT模式下不需要业务改造不同，TCC分布式事务需要开发者进行业务逻辑的拆分，通常需要将业务系统的一整段逻辑分为三个阶段：

Try：完成所有业务检查，预留必须的业务资源
Confirm：真正执行的业务逻辑，不做任何业务检查，只使用Try阶段预留的业务资源。因此只要Try操作成功，Confirm一定能成功
Cancel：释放Try阶段预留的业务资源，同样Cancel操作也需要满足幂等性
根据上面的描述，再和AT模式进行一下对比，TCC模式具有以下特点：

TCC与AT模式相同，都是二阶段提交，但是TCC对业务代码侵入性很强：
AT模式下，用户只需要关注自己的业务SQL，用户的业务SQL作为一阶段，Seata框架会自动生成事务的二阶段提交和回滚操作
TCC模式下，所有事务都要手动实现Try，Confirm，Cancel三个方法
TCC执行效率更高
AT模式下，在本地事务提交前，要尝试先拿到该记录的全局锁
TCC模式下，不需要对数据加全局锁，允许多个事务同时操作数据，因此TCC是高性能分布式事务的解决方案，适用于对性能有很高要求的场景