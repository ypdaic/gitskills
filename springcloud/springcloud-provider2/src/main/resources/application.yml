server:
  port: 8091
  servlet:
    context-path: /
spring:
 profiles:
   active: '@env@'
 datasource:
  druid:
    filter:
      stat:
        log-slow-sql: true #是否打印慢sql
        merge-sql: true #是否合并sql
    stat-view-servlet:
      enable: true
      allow: 192.168.0.4 #ip 容许列表
      loginUsername: root
      loginPassword: test1234
 application:
   # 同一个服务部署多个实例，应用名要相同
  name: springcloud-provider
 #security:
  #user:
  #  name: admin  # 认证用户名
  #  password: test1234  # 认证密码

mybatis-plus:
  mapperLocations: classpath:/sqlMapperXml/**/*.xml

# 将服务注册到eureka上
eureka:
  client:
    serviceUrl:
      # 单例
      #defaultZone: http://admin:test1234@localhost:8087/springcloud-eureka/eureka/
      defaultZone: http://admin:test1234@eureka1:8087/eureka/

      # 高可用
      #defaultZone: http://admin:test1234@eureka1:8087/eureka,http://admin:test1234@eureka2:8090/eureka
  instance:
    instanceId: springcloud-provider-2
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30 # 设置心跳的时间间隔（默认是30秒）
    lease-expiration-duration-in-seconds: 90  # 如果现在超过了5秒的间隔（默认是90秒）

info:
  app.name: '@project.name@'
  company.name: daiyanping
  build.artifactId: '@project.artifactId@'
  build.modelVersion: '@project.modelVersion@'

security:
  oauth2:
    # 用于向oauth2 服务端验证token
    resource:
      user-info-uri: http://springcloud-oauth2-jwt/security/check
      prefer-token-info: false #配置为true
      token-info-uri: http://springcloud-oauth2-jwt/oauth/check_token #该配置有值，会由RemoteTokenServices去获取token的具体信息，否则使用UserInfoTokenServices获取
      id: micro-web
      jwt:
        key-uri: http://springcloud-oauth2-jwt/oauth/token_key
    # 用于token过期，token刷新
    #   client:
    #     clientId: micro-web
    #     client-secret: 123456
    #     access-token-uri: http://127.0.0.1:10001/oauth/token
    #     grant-type: client_credentials
    #     scope: all
    client:
      clientId: client_2
      client-secret: 123456
      access-token-uri: http://springcloud-oauth2-jwt/oauth/token
      grant-type: password
      scope: server
