<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <modules>
        <module>springcloud-api</module>
        <module>springcloud-provider</module>
        <module>springcloud-provider2</module>
        <module>springcloud-consumer</module>
        <module>springcloud-consumer-ribbon</module>
        <module>springcloud-consumer-feign</module>
        <module>springcloud-consumer-feign-hystrix</module>
        <module>springcloud-security</module>
        <module>springcloud-eureka</module>
        <module>springcloud-eureka2</module>
        <module>springcloud-feign-service</module>
        <module>springcloud-provider-hystrix</module>
        <module>springcloud-user-hystrix</module>
        <module>springcloud-consumer-hystrix-dashboard</module>
        <module>springcloud-zuul-gateway</module>
        <module>springcloud-config</module>
        <module>springcloud-config-client</module>
        <module>springcloud-config-bus-client</module>
        <module>springcloud-config-eureka</module>
        <module>springcloud-config-provider-hystrix</module>
        <module>springcloud-ha-config-eureka</module>
        <module>springcloud-ha-config</module>
        <module>springcloud-ha-config2</module>
        <module>springcloud-config-bus</module>
        <module>springcloud-zookeeper</module>
    </modules>

    <groupId>com.daiyanping</groupId>
    <artifactId>springcloud</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>springcloud</name>
    <description>Demo project for Spring Boot</description>
    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>
        <spring-cloud.version>Greenwich.SR2</spring-cloud.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions>
                <exclusion>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                </exclusion>
                </exclusions>
            </dependency>
            <dependency> <!-- SpringCloud离不开SpringBoot，所以必须要配置此依赖包 -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.1.3.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--<dependency>-->
            <!--<groupId>org.mybatis.spring.boot</groupId>-->
            <!--<artifactId>mybatis-spring-boot-starter</artifactId>-->
            <!--<version>2.1.0</version>-->
            <!--</dependency>-->

            <!--mybatisplus 依赖-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>3.1.2</version>
            </dependency>
            <!--lombok依赖-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.4</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>
            <!--druid 数据源依赖-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>1.1.9</version>
            </dependency>
            <!--mysql驱动依赖-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.15</version>
            </dependency>
            <!--mybatisplus 代码生成器依赖-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>3.1.2</version>
            </dependency>
            <!--mybatisplus 代码生成模板依赖-->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>2.1</version>
            </dependency>
            <dependency>
                <groupId>com.daiyanping</groupId>
                <artifactId>springcloud-api</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.daiyanping</groupId>
                <artifactId>springcloud-security</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.daiyanping</groupId>
                <artifactId>springcloud-feign-service</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>dev</id>
            <!--默认激活dev配置-->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <env>dev</env>
            </properties>
            <!--如果properties很多，可以通过下面的方法进行加载,如果不存在配置文件
            则需要关闭该配置，否则编译不过-->
            <!--<build>-->
            <!--<filters>-->
            <!--<filter>config-dev.properties</filter>-->
            <!--</filters>-->
            <!--</build>-->
        </profile>
        <profile>
            <id>test</id>
            <!--默认激活dev配置-->
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <env>test</env>
            </properties>
        </profile>
        <profile>
            <id>provider</id>
            <!--默认激活dev配置-->
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <env>provider</env>
            </properties>
        </profile>
    </profiles>


    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!--filtering为ture,只会将被过滤的文件打到jar中，其他配置
                文件也想要打到jar包中，就必须在配置一个resource-->
                <filtering>true</filtering>
                <!--开启过滤，并对application.yml文件中包含${key}的配置
                将使用maven配置的值进行替换-->
                <includes>
                    <include>*-${env}.yml</include>
                    <include>application.yml</include>
                    <include>bootstrap.yml</include>
                </includes>
            </resource>

            <resource>
                <directory>src/main/resources</directory>
                <!--filtering为false,表示不过滤文件，但需要排除掉上面我们需要
                过滤的文件-->
                <filtering>false</filtering>
                <excludes>
                    <exclude>*.yml</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>

    </build>

</project>
